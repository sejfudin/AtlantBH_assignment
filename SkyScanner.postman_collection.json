{
	"info": {
		"_postman_id": "29bc7abb-2c23-4cb3-865c-ef959982c12e",
		"name": "SkyScanner",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List places",
			"item": [
				{
					"name": "Smoke test",
					"item": [
						{
							"name": "List_places_status_code_200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a98e93f9-40b5-438d-a49c-caebbdfa9b7c",
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.unset(\"query\");\r",
											"pm.environment.unset(\"pathParams\");\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "09c51a99-786a-4806-af91-13c57b5ca7ce",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List_places_schema_validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64f9d4c8-d6d5-4089-901e-45ecd77667f9",
										"exec": [
											"const schema = {\r",
											"  \"type\" : \"object\",\r",
											"  \"Properties\": {\r",
											"    \"Places\": {\"type\" : \"array\",\r",
											"    \"minItems\" : 1,\r",
											"    \"items\" : [{\"type\" : \"string\",\r",
											"    \"Properties\": {\r",
											"      \"PlaceId\" : {\"type\" : \"string\"},\r",
											"      \"PlaceName\" : {\"type\" : \"string\"},\r",
											"      \"CountryId\" : {\"type\" : \"string\"},\r",
											"      \"RegionId\" : {\"type\" : \"string\"},\r",
											"      \"CityId\" : {\"type\" : \"string\"},\r",
											"      \"CountryName\" : {\"type\" : \"string\"},\r",
											"    },\r",
											"    \"required\" : [\"PlaceId\", \"PlaceName\", \"CountryId\", \"RegionId\", \"CityId\", \"CountryName\"]\r",
											"    \r",
											"    }]\r",
											"    }\r",
											"  },\r",
											"  \"required\" : [\"Places\"]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											" pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.environment.unset(\"query\");\r",
											"pm.environment.unset(\"pathParams\");\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a0ec49a-4f2d-4d59-b5c0-4ed62ff81cb1",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive tests",
					"item": [
						{
							"name": "City_Sarajevo_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9cb62c5-3715-46a4-b0bd-7ac1e9ccbc49",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"County should be Bosnia\", function () {\r",
											"    pm.expect(response.Places[0].CountryName).to.eql(\"Bosnia and Herzegovina\");\r",
											"});\r",
											"pm.environment.clear();\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f392279b-558f-4fc8-81cc-8a924cfb7cfe",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Airport_Sarajevo_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "148b93cd-60be-4faa-972a-f60e961c5d4c",
										"exec": [
											"const response = pm.response.json();\r",
											"const airport = response.Places[0];\r",
											"\r",
											"pm.test(\"Airport should be Sarajevo International\", function (){\r",
											"    pm.expect(airport.PlaceName).to.eql(\"Sarajevo International\")\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fd822b02-36f0-4b4c-83ca-7484b185ffc5",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative tests",
					"item": [
						{
							"name": "City_Sa rajevo_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09325eb8-db45-4ab2-941d-5e4fce8573d5",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Places should be empty\", function () {\r",
											"    pm.expect(response.Places).to.be.empty;\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fa181e39-705d-4e20-aa2c-ce1fed9366e4",
										"exec": [
											"const query = \"query=Sa rajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "City_Saraj3vo_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23d48c10-263e-4b4e-98df-8c8c00474a6e",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Places should be empty\", function () {\r",
											"    pm.expect(response.Places).to.be.empty;\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af7d6a38-15be-4b6b-95c1-78f9a3d90be9",
										"exec": [
											"const query = \"query=Saraj3vo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "City_Sarajevo3_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "514dd55e-112d-4c91-9cc4-b904f5fa554a",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Places should be empty\", function () {\r",
											"    pm.expect(response.Places).to.be.empty;\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bceb7041-f0ea-4229-aedf-d8339c6589a7",
										"exec": [
											"const query = \"query=Sarajevo3\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/{{pathParams}}/?{{query}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"autosuggest",
										"v1.0",
										"{{pathParams}}",
										""
									],
									"query": [
										{
											"key": "{{query}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Browse quotes",
			"item": [
				{
					"name": "Smoke test",
					"item": [
						{
							"name": "Browse_quotes_status_code_200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0242995-c7c0-4013-9009-53cbb9fd507d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b63df2e6-8d7f-43ac-8fac-5f092b37e29b",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Browse_quotes_schema_validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8271032-3581-4136-9a8a-51f5f86e3c23",
										"exec": [
											"const schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"Properties\": {\r",
											"    \"Quotes\": {\"type\": \"array\"},\r",
											"    \"Places\": {\"type\": \"array\"},\r",
											"    \"Carriers\": {\"type\": \"array\"},\r",
											"    \"Currencies\": {\"type\": \"array\",\r",
											"                    \"minItems\": 1,\r",
											"                    \"items\": [{\r",
											"                      \"Code\" : {\"type\": \"string\"},\r",
											"                      \"Symbol\" : {\"type\": \"string\"},\r",
											"                      \"ThousandsSeparator\": {\"type\": \"string\"},\r",
											"                      \"DecimalSeparator\": {\"type\": \"string\"},\r",
											"                      \"SymbolOnLeft\": {\"type\": \"boolean\"},\r",
											"                      \"SpaceBetweenAmountAndSymbol\": {\"type\": \"boolean\"},\r",
											"                      \"RoundingCoefficient\": {\"type\": \"number\"},\r",
											"                      \"DecimalDigits\": {\"type\": \"number\"}\r",
											"                    }],\r",
											"                    \"required\": [\"Code\", \"Symbol\", \"ThousandsSeparator\", \"DecimalSeparator\", \"SymbolOnLeft\", \"SpaceBetweenAmountAndSymbol\", \"RoundingCoefficient\", \"DecimalDigits\"]\r",
											"                    }\r",
											"  },\r",
											"  \"required\" : [\"Quotes\", \"Places\", \"Carriers\", \"Currencies\"],\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											" pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "839cb97d-7529-4aed-8344-2ee4b6fedcd2",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"TZL-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive tests",
					"item": [
						{
							"name": "Valid_destinations_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3ab54bc-2b18-418b-af70-2f5e55c28a46",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Relations should be Istanbul-Sarajevo\", function () {\r",
											"    pm.expect(response.Places[0].CityName).to.eql(\"Istanbul\");\r",
											"    pm.expect(response.Places[2].CityName).to.eql(\"Sarajevo\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "388aa63b-819c-49a4-81d3-a36d200558e4",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Valid_county_name_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dca487f-bf8c-4f72-929a-e29b82c974f9",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Country should be Turkey\", function () {\r",
											"    pm.expect(response.Places[0].CountryName).to.eql(\"Turkey\");\r",
											"   \r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d6cc5a07-fb57-491c-8073-d05899eea35f",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative tests",
					"item": [
						{
							"name": "Date_in_the_past_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "150f9895-2ed6-4038-9aed-150dc4f73cc1",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Date should be in the past\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Date in the past\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcb24ac8-f0f9-4e3d-9de7-a0f32d7ed81e",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-01-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect_date_format_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0e4ff13-0f9b-4f68-97a7-417114aa9332",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Date format should be invalid\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Incorrect date format\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a2531e19-a87d-4bfa-b772-7d3aaaa17c41",
										"exec": [
											"const query = \"query=Sarajevo\";\r",
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"query\", query);\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020.01.01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect_destination_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "700d1e63-a58c-4f7e-bb97-a50ffc183077",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Value should be invalid\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Incorrect value\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "31193801-a5a3-452a-a813-9d781c0e7f31",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky3\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Browse routes",
			"item": [
				{
					"name": "Smoke test",
					"item": [
						{
							"name": "Browse_routes_status_code_200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63a3977f-a587-4070-9c88-79361cb7312a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14990988-52db-43e6-b8a7-52ef0458f586",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsequotes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Browse_routes_schema_validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12615cce-d40a-4b7b-9c9b-c5584025e503",
										"exec": [
											"const schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"Properties\": {\r",
											"    \"Routes\": {\"type\": \"array\"},\r",
											"    \"Quotes\": {\"type\": \"array\"},\r",
											"    \"Places\": {\"type\": \"array\"},\r",
											"    \"Carriers\": {\"type\": \"array\"},\r",
											"    \"Currencies\": {\"type\": \"array\",\r",
											"                    \"minItems\": 1,\r",
											"                    \"items\": [{\r",
											"                      \"Code\" : {\"type\": \"string\"},\r",
											"                      \"Symbol\" : {\"type\": \"string\"},\r",
											"                      \"ThousandsSeparator\": {\"type\": \"string\"},\r",
											"                      \"DecimalSeparator\": {\"type\": \"string\"},\r",
											"                      \"SymbolOnLeft\": {\"type\": \"boolean\"},\r",
											"                      \"SpaceBetweenAmountAndSymbol\": {\"type\": \"boolean\"},\r",
											"                      \"RoundingCoefficient\": {\"type\": \"number\"},\r",
											"                      \"DecimalDigits\": {\"type\": \"number\"}\r",
											"                    }],\r",
											"                    \"required\": [\"Code\", \"Symbol\", \"ThousandsSeparator\", \"DecimalSeparator\", \"SymbolOnLeft\", \"SpaceBetweenAmountAndSymbol\", \"RoundingCoefficient\", \"DecimalDigits\"]\r",
											"                    }\r",
											"  },\r",
											"  \"required\" : [\"Routes\", \"Quotes\", \"Places\", \"Carriers\", \"Currencies\"],\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											" pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "54d2080b-fe33-4fb0-affb-123589e93646",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"TZL-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive tests",
					"item": [
						{
							"name": "Valid_destinations_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0aaf0237-4c35-4f69-a15d-4fbba014e1c3",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Relation should be Sarajevo-Istanbul\", function () {\r",
											"    pm.expect(response.Places[0].CityName).to.eql(\"Istanbul\");\r",
											"    pm.expect(response.Places[2].CityName).to.eql(\"Sarajevo\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c91a7620-24cb-41a6-881b-9ffc2db9d1a1",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Valid_country_name_positive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c05547f3-cbcc-42d4-958b-e39e68e9fae9",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Country should be Turkey\", function () {\r",
											"    pm.expect(response.Places[0].CountryName).to.eql(\"Turkey\");\r",
											"   \r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c3faba50-fd08-4737-9afc-818d435561fc",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative tests",
					"item": [
						{
							"name": "Date_in_the_past_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff2463d9-1409-4c22-98a9-6c4daabc86e6",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Date should be in the pas\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Date in the past\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1dbab6df-b8c7-483b-a643-a07e8b028472",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-01-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect_date_format_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5abb62de-074e-4f30-8f06-96f5c692d852",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Date format should be invalid\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Incorrect date format\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4221eac4-1927-439d-a446-f1eec8efbc45",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020.01.01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect_destination_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "143fdb76-dc39-464e-b9ef-6ecf5c387e45",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Value should be invalid\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"Incorrect value\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b71baf66-2a00-4013-bfc8-6fd817a875f1",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky3\");\r",
											"pm.environment.set(\"date\", \"2020-01-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect_country_value_negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5a92bf7-d8ef-4d6c-8d91-83a661ba023c",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"Country name should be invalid\", function () {\r",
											"    pm.expect(response.ValidationErrors[0].Message).to.eql(\"The country specific is not a valid market\");\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3214a5a9-9c76-4800-a3ff-49a0b30691e6",
										"exec": [
											"const pathParams = \"BAS/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky3\");\r",
											"pm.environment.set(\"date\", \"2020-01-01\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?rapidapi-key={{rapidapi-key}}&{{returnDate}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browseroutes",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										},
										{
											"key": "{{returnDate}}",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Browse dates",
			"item": [
				{
					"name": "Smoke test",
					"item": [
						{
							"name": "Browse_dates_status_code_200",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1d496c01-aed1-4d61-b1b4-2d17629a6210",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "036bf079-d5e7-4517-b696-c3be0c30eddf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?{{returnDate}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsedates",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "{{returnDate}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Browse_dates_schema_validation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "30cb363f-1af7-479a-9ab9-30afc3675953",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"TZL-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e5b656b6-41a6-4c39-b346-7936becd570f",
										"exec": [
											"const schema = {\r",
											"  \"type\" : \"object\",\r",
											"  \"Properties\": {\r",
											"    \"Dates\" : {\r",
											"      \"type\": \"object\",\r",
											"      \"Properties\": {\r",
											"        \"OutboundDates\": {\"type\": \"array\" }\r",
											"      },\r",
											"      \"required\": [\"OutboundDates\"]\r",
											"\r",
											"    },\r",
											"    \"Quotes\": {\"type\": \"array\"},\r",
											"    \"Places\": {\"type\": \"array\"},\r",
											"    \"Carriers\": {\"type\": \"array\"},\r",
											"    \"Currencies\": {\"type\": \"array\",\r",
											"    \"Properties\": {\r",
											"      \"Code\": {\"type\": \"string\"},\r",
											"      \"Symbol\": {\"type\": \"string\"},\r",
											"      \"ThousandsSeparator\": {\"type\": \"string\"},\r",
											"      \"DecimalSeparator\": {\"type\": \"string\"},\r",
											"      \"SymbolOnLeft\": {\"type\": \"boolean\"},\r",
											"      \"SpaceBetweenAmountAndSymbol\": {\"type\": \"boolean\"},\r",
											"      \"RoundingCoefficient\": {\"type\": \"number\"},\r",
											"      \"DecimalDigits\": {\"type\": \"number\"}\r",
											"    },\r",
											"    \"required\": [\"Code\", \"Symbol\", \"ThousandsSeparator\", \"DecimalSeparator\", \"SymbolOnLeft\", \"SpaceBetweenAmountAndSymbol\", \"RoundingCoefficient\", \"DecimalDigits\"]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\"Dates\", \"Quotes\", \"Carriers\", \"Currencies\"]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											" pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?{{returnDate}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsedates",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "{{returnDate}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive tests",
					"item": [
						{
							"name": "Valid_date_positive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7199b152-b47c-4288-ad58-b6b625a7904b",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "05841372-a020-40b7-9cec-8ea7dc987a74",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Outbound date should be valid\", function () {\r",
											"   pm.expect(response.Dates.OutboundDates[0].PartialDate).to.eql(\"2020-07-01\");\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?{{returnDate}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsedates",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "{{returnDate}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct_destinations_positive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4c99f0-ca8c-4e94-b0cd-c036027219e6",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-07-01\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7cef7f34-31ae-47a1-9662-10280688d742",
										"exec": [
											"const response = pm.response.json();\r",
											"console.log(response.Places[0].CountryName);\r",
											"\r",
											"\r",
											"pm.test(\"Destinations names should be valid\", function () {\r",
											"   pm.expect(response.Places[0].CountryName).to.eql(\"Turkey\");\r",
											"   pm.expect(response.Places[1].CountryName).to.eql(\"Bosnia and Herzegovina\");\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?{{returnDate}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsedates",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "{{returnDate}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative tests",
					"item": [
						{
							"name": "Invalid_date_negative",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef9e9ac-6f60-48f7-b85b-5677e7ed1919",
										"exec": [
											"const pathParams = \"BA/BAM/bs-BA\"\r",
											"const returnDate = \"inboundpartialdate=2020-07-02\"\r",
											"\r",
											"pm.environment.set(\"pathParams\", pathParams);\r",
											"pm.environment.set(\"returnDate\", returnDate);\r",
											"pm.environment.set(\"originPlace\", \"SJJ-sky\");\r",
											"pm.environment.set(\"destinationPlace\", \"ISTA-sky\");\r",
											"pm.environment.set(\"date\", \"2020-01-01\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b0a1cdd1-ec20-4906-95bc-153d395ba043",
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Date should be invalid\", function () {\r",
											"   pm.expect(response.ValidationErrors[0].Message).to.eql(\"Date in the past\");\r",
											"});\r",
											"\r",
											"pm.environment.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/{{pathParams}}/{{originPlace}}/{{destinationPlace}}/{{date}}?{{returnDate}}&rapidapi-key={{rapidapi-key}}",
									"protocol": "https",
									"host": [
										"skyscanner-skyscanner-flight-search-v1",
										"p",
										"rapidapi",
										"com"
									],
									"path": [
										"apiservices",
										"browsedates",
										"v1.0",
										"{{pathParams}}",
										"{{originPlace}}",
										"{{destinationPlace}}",
										"{{date}}"
									],
									"query": [
										{
											"key": "{{returnDate}}",
											"value": null
										},
										{
											"key": "rapidapi-key",
											"value": "{{rapidapi-key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}